{% extends 'layout_admin.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script>
        var autocomplete;
        var componentForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            //administrative_area_level_1: 'short_name',
            country: 'long_name',
            postal_code: 'short_name'
        };
        var input_ids = {
            street_number: 'add_address_location_street_number',
            route: 'add_address_location_street',
            locality: 'add_address_location_city',
            country: 'add_address_location_country',
            postal_code: 'add_address_location_postal_code'
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
                {types: ['geocode']});

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        // [START region_fillform]
        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            /** Not Required as can be predefined by user
             for (var component in componentForm) {
                        document.getElementById(component).value = '';
                        document.getElementById(component).disabled = false;
                    }
             */
            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    console.log(input_ids[addressType]);
                    document.getElementById(input_ids[addressType]).value = val;
                }
            }
        }
        // [END region_fillform]

        // [START region_geolocation]
        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }
        // [END region_geolocation]
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBSO1fpoQuukeVKiueZxzqhLCFlkgP0IMM&signed_in=true&libraries=places&callback=initAutocomplete" async defer></script>
{% endblock %}

{% block breadcrumb %}
    <div class="g-hidden-sm-down g-bg-gray-light-v8 g-pa-20">
        <ul class="u-list-inline g-color-gray-dark-v6">

            <li class="list-inline-item g-mr-10">
                <a class="u-link-v5 g-color-gray-dark-v6 g-color-lightblue-v3--hover g-valign-middle" href="{{ path('panel', {'page': 'profile'}) }}">{{ 'panel.page.add_address.breadcrumb_link'|trans }}</a>
                <i class="hs-admin-angle-right g-font-size-12 g-color-gray-light-v6 g-valign-middle g-ml-10"></i>
            </li>

            <li class="list-inline-item">
                <span class="g-valign-middle">{{ 'panel.page.add_address.breadcrumb_link2'|trans }}</span>
            </li>
        </ul>
    </div>
{% endblock %}

{% block content %}
    <div class="g-pa-20">
        <h1 class="g-font-weight-300 g-font-size-28 g-color-black g-mb-40">{{ 'panel.page.add_address.title'|trans }}</h1>
        <div class="row">
            <div class="col-lg-6">
                {{ form_start(add_address_form, {'attr': {'class': 'card'}}) }}
                <div class="card-header">{{ 'panel.page.add_address.block1.title'|trans }}</div>
                <div class="card-body">

                    <div class="form-group row">
                        {{ form_label(add_address_form.location_street, null, {'label_attr': {'class': 'col-sm-4 col-form-label'}}) }}
                        <div class="col-sm-8">

                            <div class="mb-2">
                                <input id="autocomplete" class="form-control" autocomplete="off" placeholder="{{ 'panel.page.add_address.block1.address'|trans }}" onfocus="geolocate()" />
                            </div>

                            <div class="form-row mb-2">
                                <div class="col-8">
                                    {{ form_widget(add_address_form.location_street, {'attr': {'class': 'form-control'}}) }}
                                </div>

                                <div class="col-4">
                                    {{ form_widget(add_address_form.location_street_number, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>

                            <div class="form-row mb-2">
                                <div class="col-4">
                                    {{ form_widget(add_address_form.location_postal_code, {'attr': {'class': 'form-control'}}) }}
                                </div>

                                <div class="col-8">
                                    {{ form_widget(add_address_form.location_city, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>

                            {{ form_widget(add_address_form.location_country, {'attr': {'class': 'form-control'}}) }}
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="form-row">
                        <div class="col">
                            {{ form_widget(add_address_form.password_verify, {'attr': {'class': 'form-control'}}) }}
                        </div>
                        {{ form_widget(add_address_form.send, {'attr': {'class': 'btn u-btn-blue'}}) }}
                    </div>
                </div>
                {{ form_end(add_address_form) }}
            </div>
        </div>
    </div>
{% endblock %}
